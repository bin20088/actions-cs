name: 测试

on:
  repository_dispatch:
    types: [cs,sshcs]
  workflow_dispatch:
    inputs:
      ssh:
        description: 'cs'
        required: false
        default: 'false'
#  schedule:
#    - cron: 00 17 * * *

env:
  REPO_URL_armv8: https://downloads.openwrt.org/snapshots/targets/armvirt/64/openwrt-sdk-armvirt-64_gcc-8.4.0_musl.Linux-x86_64.tar.xz
  REPO_URL_x64: https://downloads.openwrt.org/snapshots/targets/x86/64/openwrt-sdk-x86-64_gcc-8.4.0_musl.Linux-x86_64.tar.xz
  CONFIG_FILE: cs.config
  DIY_SH: cs.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: false
  UPLOAD_RELEASE: false
  UPLOAD_WETRANSFER: false
  UPLOAD_COWTRANSFER: false
  TZ: Asia/Shanghai
  FILE_NAME: 测试

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code # 克隆源代码
      id: source
      working-directory: /workdir
      run: |
        df -hT $PWD
        wget $REPO_URL_armv8
        mkdir ./openwrt && tar -xvJf *.tar.xz -C ./openwrt --strip-components 1
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        git clone https://github.com/bin20088/luci-app-koolproxy.git /openwrt/package/luci-app-koolproxy

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'sshcs')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        make package/luci-app-koolproxy/compile V=99
        echo "::set-output name=status::success"

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true' && !cancelled()
      with:
        name: cs
        path: openwrt/bin

    - name: WeChat notification
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: curl https://sc.ftqq.com/${{ secrets.ServerChan }}.send?text=${{ env.FILE_NAME }}编译结束
